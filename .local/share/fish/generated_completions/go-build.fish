# go-build
# Autogenerated from man page /usr/share/man/man1/go-build.1.gz
complete -c go-build -s a -d 'force rebuilding of packages that are already up-to-date'
complete -c go-build -s n -d 'print the commands but do not run them'
complete -c go-build -s p -d 'the number of programs, such as build commands or test binaries, that can be …'
complete -c go-build -o race -d 'enable data race detection'
complete -c go-build -o msan -d 'enable interoperation with memory sanitizer'
complete -c go-build -o asan -d 'enable interoperation with address sanitizer'
complete -c go-build -s v -d 'print the names of packages as they are compiled'
complete -c go-build -o work -d 'print the name of the temporary work directory and do not delete it when exit…'
complete -c go-build -s x -d 'print the commands'
complete -c go-build -o asmflags -d 'arguments to pass on each go tool asm invocation'
complete -c go-build -o buildmode -d 'build mode to use.  See \\(oqgo help buildmode\' for more'
complete -c go-build -o buildvcs -d 'Whether to stamp binaries with version control information'
complete -c go-build -o compiler -d 'name of compiler to use, as in runtime. Compiler (gccgo or gc)'
complete -c go-build -o gccgoflags -d 'arguments to pass on each gccgo compiler/linker invocation'
complete -c go-build -o gcflags -d 'arguments to pass on each go tool compile invocation'
complete -c go-build -o installsuffix -d 'a suffix to use in the name of the package installation directory, in order t…'
complete -c go-build -o ldflags -d 'arguments to pass on each go tool link invocation'
complete -c go-build -o linkshared -d 'build code that will be linked against shared libraries previously created wi…'
complete -c go-build -o mod -d 'module download mode to use: readonly, vendor, or mod'
complete -c go-build -o modcacherw -d 'leave newly-created directories in the module cache read-write instead of mak…'
complete -c go-build -o modfile -d 'in module aware mode, read (and possibly write) an alternate go'
complete -c go-build -o overlay -d 'read a JSON config file that provides an overlay for build operations'
complete -c go-build -o pkgdir -d 'install and load all packages from dir instead of the usual locations'
complete -c go-build -o tags -d 'a comma-separated list of additional build tags to consider satisfied during …'
complete -c go-build -o trimpath -d 'remove all file system paths from the resulting executable'
complete -c go-build -o toolexec -d 'a program to use to invoke toolchain programs like vet and asm'

